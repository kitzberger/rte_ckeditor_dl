{"version":3,"file":"index.umd.js","sources":["../../src/definitionlist.ts","../../src/index.ts"],"sourcesContent":["import { Plugin, ButtonView, Command, type MultiCommand, type Editor } from 'ckeditor5';\n\nimport definitionListIcon from './icon.svg';\n\nexport default class DefinitionList extends Plugin {\n\tpublic static get pluginName() {\n\t\treturn 'DefinitionList' as const;\n\t}\n\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\tthis.defineSchema();\n\t\tthis.defineConverters();\n\n\t\teditor.commands.add('insertDefinitionList', new InsertDefinitionListCommand(editor));\n\t\teditor.commands.add('indentDefinitionTerm', new AlterDefinitionListCommand(editor, 'forward'));\n\t\teditor.commands.add('outdentDefinitionDescription', new AlterDefinitionListCommand(editor, 'backward'));\n\n\t\t// Register the \"definitionList\" button, so it can be displayed in the toolbar.\n\t\teditor.ui.componentFactory.add('definitionList', locale => {\n\t\t\tconst view = new ButtonView(locale);\n\n\t\t\tview.set({\n\t\t\t\tlabel: t('Definition list'),\n\t\t\t\ticon: definitionListIcon,\n\t\t\t\ttooltip: true\n\t\t\t});\n\n\t\t\tconst command = editor.commands.get('insertDefinitionList') as InsertDefinitionListCommand;\n\t\t\tview.bind('isOn').to(command, 'value');\n\n\t\t\tview.on('execute', () => {\n\t\t\t\teditor.execute('insertDefinitionList');\n\t\t\t\teditor.editing.view.focus();\n\t\t\t});\n\n\t\t\treturn view;\n\t\t});\n\t}\n\n\tpublic afterInit(): void {\n\t\tconst editor = this.editor;\n\t\tconst commands = editor.commands;\n\t\tconst model = editor.model;\n\t\tconst doc = model.document;\n\t\tconst indent = commands.get('indent') as MultiCommand;\n\t\tconst outdent = commands.get('outdent') as MultiCommand;\n\n\t\tif (indent) {\n\t\t\t// Priority is high due to integration with `IndentBlock` plugin. We want to indent list first and if it's not possible\n\t\t\t// user can indent content with `IndentBlock` plugin.\n\t\t\tindent.registerChildCommand(commands.get('indentDefinitionTerm')!, { priority: 'high' });\n\t\t}\n\n\t\tthis.editor.keystrokes.set('Tab', (keyEvtData, cancel) => {\n\t\t\teditor.execute('indentDefinitionTerm');\n\t\t\tcancel();\n\t\t});\n\n\t\tif (outdent) {\n\t\t\t// Priority is lowest due to integration with `IndentBlock` and `IndentCode` plugins.\n\t\t\t// First we want to allow user to outdent all indendations from other features then he can oudent list item.\n\t\t\toutdent.registerChildCommand(commands.get('outdentDefinitionDescription')!, { priority: 'lowest' });\n\t\t}\n\n\t\tthis.editor.keystrokes.set('Shift+Tab', (keyEvtData, cancel) => {\n\t\t\teditor.execute('outdentDefinitionDescription');\n\t\t\tcancel();\n\t\t});\n\n\t\teditor.editing.view.document.on('keydown', (evt, data) => {\n\t\t\tconst selection = doc.selection;\n\t\t\tconst position = selection.getFirstPosition();\n\t\t\tconst parent = position?.parent;\n\n\t\t\t// Handle Delete at the end of a <dd>\n\t\t\tif (\n\t\t\t\tdata.domEvent.key === 'Delete' &&\n\t\t\t\tparent?.is('element', 'definitionDescription') &&\n\t\t\t\tposition?.isAtEnd\n\t\t\t) {\n\t\t\t\tconst next = parent.nextSibling;\n\n\t\t\t\tif (next?.is('element', 'definitionDescription')) {\n\t\t\t\t\tevt.stop();\n\t\t\t\t\tdata.preventDefault();\n\n\t\t\t\t\tmodel.change(writer => {\n\t\t\t\t\t\t// Move contents of next <dd> into current <dd>\n\t\t\t\t\t\tconst range = writer.createRangeIn(next);\n\t\t\t\t\t\tconst insertPos = writer.createPositionAt(parent, 'end');\n\t\t\t\t\t\twriter.move(range, insertPos);\n\n\t\t\t\t\t\t// Remove the now-empty <dd>\n\t\t\t\t\t\twriter.remove(next);\n\n\t\t\t\t\t\t// Reselect at end of merged content\n\t\t\t\t\t\twriter.setSelection(insertPos);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Handle Backspace at the beginning of a <dd>\n\t\t\tif (\n\t\t\t\tdata.domEvent.key === 'Backspace' &&\n\t\t\t\tparent?.is('element', 'definitionDescription') &&\n\t\t\t\tposition?.isAtStart\n\t\t\t) {\n\t\t\t\tconst previous = parent.previousSibling;\n\n\t\t\t\tif (previous?.is('element', 'definitionDescription')) {\n\t\t\t\t\tevt.stop();\n\t\t\t\t\tdata.preventDefault();\n\n\t\t\t\t\tmodel.change(writer => {\n\t\t\t\t\t\t// Move contents of current <dd> into the previous <dd>\n\t\t\t\t\t\tconst range = writer.createRangeIn(parent);\n\t\t\t\t\t\tconst insertPos = writer.createPositionAt(previous, 'end');\n\t\t\t\t\t\twriter.move(range, insertPos);\n\n\t\t\t\t\t\t// Remove the now-empty <dd>\n\t\t\t\t\t\twriter.remove(parent);\n\n\t\t\t\t\t\t// Set selection to end of merged content\n\t\t\t\t\t\twriter.setSelection(insertPos);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ⬇ Handle Enter or ↓ at end of last <dd>\n\t\t\tif ((data.domEvent.key === 'Enter' || data.domEvent.key === 'ArrowDown') && parent?.is('element', 'definitionDescription')) {\n\t\t\t\tconst dl = parent.findAncestor('definitionList');\n\t\t\t\tconst isLastChild = dl?.getChild(dl.childCount - 1) === parent;\n\t\t\t\tconst isAtEnd = position?.isAtEnd;\n\n\t\t\t\tif (dl && isLastChild && isAtEnd) {\n\t\t\t\t\tdata.preventDefault();\n\t\t\t\t\tevt.stop();\n\t\t\t\t\tmodel.change(writer => {\n\t\t\t\t\t\tconst paragraph = writer.createElement('paragraph');\n\t\t\t\t\t\twriter.insert(paragraph, model.createPositionAfter(dl));\n\t\t\t\t\t\twriter.setSelection(paragraph, 'in');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ⬆ Handle ↑ at start of first <dt>\n\t\t\tif (data.domEvent.key === 'ArrowUp' && parent?.is('element', 'definitionTerm')) {\n\t\t\t\tconst dl = parent.findAncestor('definitionList');\n\t\t\t\tconst isFirstChild = dl?.getChild(0) === parent;\n\t\t\t\tconst isAtStart = position?.isAtStart;\n\n\t\t\t\tif (dl && isFirstChild && isAtStart) {\n\t\t\t\t\tdata.preventDefault();\n\t\t\t\t\tevt.stop();\n\t\t\t\t\tmodel.change(writer => {\n\t\t\t\t\t\tconst paragraph = writer.createElement('paragraph');\n\t\t\t\t\t\twriter.insert(paragraph, model.createPositionBefore(dl));\n\t\t\t\t\t\twriter.setSelection(paragraph, 'in');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate defineSchema(): void {\n\t\tconst schema = this.editor.model.schema;\n\n\t\tschema.register('definitionList', {\n\t\t\tallowWhere: '$block',\n\t\t\tallowContentOf: '$block',\n\t\t\tisBlock: true\n\t\t});\n\n\t\tschema.register('definitionTerm', {\n\t\t\tallowIn: 'definitionList',\n\t\t\tallowContentOf: '$block',\n\t\t\tisBlock: true\n\t\t});\n\n\t\tschema.register('definitionDescription', {\n\t\t\tallowIn: 'definitionList',\n\t\t\tallowContentOf: '$block',\n\t\t\tisBlock: true\n\t\t});\n\t}\n\n\tprivate defineConverters(): void {\n\t\tconst conversion = this.editor.conversion;\n\n\t\tconversion.for('upcast').elementToElement({\n\t\t\tview: 'dl',\n\t\t\tmodel: 'definitionList'\n\t\t});\n\n\t\tconversion.for('upcast').elementToElement({\n\t\t\tview: 'dt',\n\t\t\tmodel: 'definitionTerm'\n\t\t});\n\n\t\tconversion.for('upcast').elementToElement({\n\t\t\tview: 'dd',\n\t\t\tmodel: 'definitionDescription'\n\t\t});\n\n\t\tconversion.for('dataDowncast').elementToElement({\n\t\t\tmodel: 'definitionList',\n\t\t\tview: 'dl'\n\t\t});\n\n\t\tconversion.for('dataDowncast').elementToElement({\n\t\t\tmodel: 'definitionTerm',\n\t\t\tview: 'dt'\n\t\t});\n\n\t\tconversion.for('dataDowncast').elementToElement({\n\t\t\tmodel: 'definitionDescription',\n\t\t\tview: 'dd'\n\t\t});\n\n\t\tconversion.for('editingDowncast').elementToElement({\n\t\t\tmodel: 'definitionList',\n\t\t\tview: (modelElement, { writer }) => writer.createContainerElement('dl')\n\t\t});\n\n\t\tconversion.for('editingDowncast').elementToElement({\n\t\t\tmodel: 'definitionTerm',\n\t\t\tview: (modelElement, { writer }) => writer.createEditableElement('dt')\n\t\t});\n\n\t\tconversion.for('editingDowncast').elementToElement({\n\t\t\tmodel: 'definitionDescription',\n\t\t\tview: (modelElement, { writer }) => writer.createEditableElement('dd')\n\t\t});\n\t}\n}\n\nclass InsertDefinitionListCommand extends Command {\n\tdeclare public value: boolean;\n\n\tpublic constructor(editor: Editor) {\n\t\tsuper(editor);\n\t\tthis.value = false;\n\t}\n\n\tpublic override execute(): void {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst selection = model.document.selection;\n\n\t\tconst isInsideDefinitionList = !!selection.getFirstPosition()?.findAncestor('definitionList');\n\t\tif (isInsideDefinitionList) {\n\t\t\treturn; // Prevent insertion if already inside a <dl>\n\t\t}\n\n\t\tmodel.change(writer => {\n\t\t\tconst dl = writer.createElement('definitionList');\n\t\t\tconst dt = writer.createElement('definitionTerm');\n\t\t\tconst dd = writer.createElement('definitionDescription');\n\n\t\t\twriter.insertText('Term', dt);\n\t\t\twriter.insertText('Definition', dd);\n\n\t\t\twriter.append(dt, dl);\n\t\t\twriter.append(dd, dl);\n\n\t\t\tmodel.insertContent(dl);\n\t\t\twriter.setSelection(dt, 'end');\n\t\t});\n\t}\n\n\tpublic override refresh(): void {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\n\t\tconst isInDefinitionList = !!selection.getFirstPosition()?.findAncestor('definitionList');\n\t\tthis.isEnabled = true;\n\t\tthis.value = isInDefinitionList;\n\t}\n}\n\nclass AlterDefinitionListCommand extends Command {\n\tprivate readonly _direction: 'forward' | 'backward';\n\tprivate readonly _source: 'definitionTerm' | 'definitionDescription';\n\tprivate readonly _target: 'definitionTerm' | 'definitionDescription';\n\n\tpublic constructor(editor: Editor, indentDirection: 'forward' | 'backward') {\n\t\tsuper(editor);\n\t\tthis._direction = indentDirection;\n\t\tthis._source = this._direction === 'forward' ? 'definitionTerm' : 'definitionDescription';\n\t\tthis._target = this._direction === 'backward' ? 'definitionTerm' : 'definitionDescription';\n\t}\n\n\tpublic override refresh(): void {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst position = selection.getFirstPosition();\n\t\tconst element = position?.parent;\n\t\tthis.isEnabled = element?.is('element', this._source) ?? false;\n\t}\n\n\tpublic override execute(): void {\n\t\tthis._transformElement(this._source, this._target, () => {});\n\t}\n\n\tprivate _transformElement(from: string, to: string, cancel: () => void): boolean {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst position = selection.getFirstPosition();\n\t\tconst element = position?.parent;\n\n\t\tif (element?.is('element', from)) {\n\t\t\tmodel.change(writer => {\n\t\t\t\tconst newElement = writer.createElement(to);\n\n\t\t\t\t// Insert the new element after the old one\n\t\t\t\twriter.insert(newElement, element, 'after');\n\n\t\t\t\t// Move all child nodes into the new element\n\t\t\t\tconst range = writer.createRangeIn(element);\n\t\t\t\twriter.move(range, writer.createPositionAt(newElement, 0));\n\n\t\t\t\t// Remove the old element\n\t\t\t\twriter.remove(element);\n\n\t\t\t\t// Set selection into the new element\n\t\t\t\twriter.setSelection(newElement, 'in');\n\t\t\t});\n\n\t\t\tcancel(); // prevent native behavior\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n","import ckeditor from './../theme/icons/ckeditor.svg';\nimport './augmentation.js';\n\nexport { default as DefinitionList } from './definitionlist.js';\n\nexport const icons = {\n\tckeditor\n};\n"],"names":["DefinitionList","Plugin","pluginName","init","editor","this","t","defineSchema","defineConverters","commands","add","InsertDefinitionListCommand","AlterDefinitionListCommand","ui","componentFactory","locale","view","ButtonView","set","label","icon","tooltip","command","get","bind","to","on","execute","editing","focus","afterInit","model","doc","document","indent","outdent","registerChildCommand","priority","keystrokes","keyEvtData","cancel","evt","data","position","selection","getFirstPosition","parent","domEvent","key","is","isAtEnd","next","nextSibling","stop","preventDefault","change","writer","range","createRangeIn","insertPos","createPositionAt","move","remove","setSelection","isAtStart","previous","previousSibling","dl","findAncestor","isLastChild","getChild","childCount","paragraph","createElement","insert","createPositionAfter","isFirstChild","createPositionBefore","schema","register","allowWhere","allowContentOf","isBlock","allowIn","conversion","for","elementToElement","modelElement","createContainerElement","createEditableElement","Command","constructor","super","value","dt","dd","insertText","append","insertContent","refresh","isInDefinitionList","isEnabled","_direction","_source","_target","indentDirection","element","_transformElement","from","newElement","icons","ckeditor"],"mappings":"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"}