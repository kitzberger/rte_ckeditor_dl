{"version":3,"file":"index.js","sources":["../../src/definitionlist.ts","../../src/index.ts"],"sourcesContent":["import { Plugin, ButtonView, Command, type MultiCommand, type Editor } from 'ckeditor5';\n\nimport definitionListIcon from './icon.svg';\n\nexport default class DefinitionList extends Plugin {\n\tpublic static get pluginName() {\n\t\treturn 'DefinitionList' as const;\n\t}\n\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\tthis.defineSchema();\n\t\tthis.defineConverters();\n\n\t\teditor.commands.add('insertDefinitionList', new InsertDefinitionListCommand(editor));\n\t\teditor.commands.add('indentDefinitionTerm', new AlterDefinitionListCommand(editor, 'forward'));\n\t\teditor.commands.add('outdentDefinitionDescription', new AlterDefinitionListCommand(editor, 'backward'));\n\n\t\t// Register the \"definitionList\" button, so it can be displayed in the toolbar.\n\t\teditor.ui.componentFactory.add('definitionList', locale => {\n\t\t\tconst view = new ButtonView(locale);\n\n\t\t\tview.set({\n\t\t\t\tlabel: t('Definition list'),\n\t\t\t\ticon: definitionListIcon,\n\t\t\t\ttooltip: true\n\t\t\t});\n\n\t\t\tconst command = editor.commands.get('insertDefinitionList') as InsertDefinitionListCommand;\n\t\t\tview.bind('isOn').to(command, 'value');\n\n\t\t\tview.on('execute', () => {\n\t\t\t\teditor.execute('insertDefinitionList');\n\t\t\t\teditor.editing.view.focus();\n\t\t\t});\n\n\t\t\treturn view;\n\t\t});\n\t}\n\n\tpublic afterInit(): void {\n\t\tconst editor = this.editor;\n\t\tconst commands = editor.commands;\n\t\tconst model = editor.model;\n\t\tconst doc = model.document;\n\t\tconst indent = commands.get('indent') as MultiCommand;\n\t\tconst outdent = commands.get('outdent') as MultiCommand;\n\n\t\tif (indent) {\n\t\t\t// Priority is high due to integration with `IndentBlock` plugin. We want to indent list first and if it's not possible\n\t\t\t// user can indent content with `IndentBlock` plugin.\n\t\t\tindent.registerChildCommand(commands.get('indentDefinitionTerm')!, { priority: 'high' });\n\t\t}\n\n\t\tthis.editor.keystrokes.set('Tab', (keyEvtData, cancel) => {\n\t\t\teditor.execute('indentDefinitionTerm');\n\t\t\tcancel();\n\t\t});\n\n\t\tif (outdent) {\n\t\t\t// Priority is lowest due to integration with `IndentBlock` and `IndentCode` plugins.\n\t\t\t// First we want to allow user to outdent all indendations from other features then he can oudent list item.\n\t\t\toutdent.registerChildCommand(commands.get('outdentDefinitionDescription')!, { priority: 'lowest' });\n\t\t}\n\n\t\tthis.editor.keystrokes.set('Shift+Tab', (keyEvtData, cancel) => {\n\t\t\teditor.execute('outdentDefinitionDescription');\n\t\t\tcancel();\n\t\t});\n\n\t\teditor.editing.view.document.on('keydown', (evt, data) => {\n\t\t\tconst selection = doc.selection;\n\t\t\tconst position = selection.getFirstPosition();\n\t\t\tconst parent = position?.parent;\n\n\t\t\t// Handle Delete at the end of a <dd>\n\t\t\tif (\n\t\t\t\tdata.domEvent.key === 'Delete' &&\n\t\t\t\tparent?.is('element', 'definitionDescription') &&\n\t\t\t\tposition?.isAtEnd\n\t\t\t) {\n\t\t\t\tconst next = parent.nextSibling;\n\n\t\t\t\tif (next?.is('element', 'definitionDescription')) {\n\t\t\t\t\tevt.stop();\n\t\t\t\t\tdata.preventDefault();\n\n\t\t\t\t\tmodel.change(writer => {\n\t\t\t\t\t\t// Move contents of next <dd> into current <dd>\n\t\t\t\t\t\tconst range = writer.createRangeIn(next);\n\t\t\t\t\t\tconst insertPos = writer.createPositionAt(parent, 'end');\n\t\t\t\t\t\twriter.move(range, insertPos);\n\n\t\t\t\t\t\t// Remove the now-empty <dd>\n\t\t\t\t\t\twriter.remove(next);\n\n\t\t\t\t\t\t// Reselect at end of merged content\n\t\t\t\t\t\twriter.setSelection(insertPos);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Handle Backspace at the beginning of a <dd>\n\t\t\tif (\n\t\t\t\tdata.domEvent.key === 'Backspace' &&\n\t\t\t\tparent?.is('element', 'definitionDescription') &&\n\t\t\t\tposition?.isAtStart\n\t\t\t) {\n\t\t\t\tconst previous = parent.previousSibling;\n\n\t\t\t\tif (previous?.is('element', 'definitionDescription')) {\n\t\t\t\t\tevt.stop();\n\t\t\t\t\tdata.preventDefault();\n\n\t\t\t\t\tmodel.change(writer => {\n\t\t\t\t\t\t// Move contents of current <dd> into the previous <dd>\n\t\t\t\t\t\tconst range = writer.createRangeIn(parent);\n\t\t\t\t\t\tconst insertPos = writer.createPositionAt(previous, 'end');\n\t\t\t\t\t\twriter.move(range, insertPos);\n\n\t\t\t\t\t\t// Remove the now-empty <dd>\n\t\t\t\t\t\twriter.remove(parent);\n\n\t\t\t\t\t\t// Set selection to end of merged content\n\t\t\t\t\t\twriter.setSelection(insertPos);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ⬇ Handle Enter or ↓ at end of last <dd>\n\t\t\tif ((data.domEvent.key === 'Enter' || data.domEvent.key === 'ArrowDown') && parent?.is('element', 'definitionDescription')) {\n\t\t\t\tconst dl = parent.findAncestor('definitionList');\n\t\t\t\tconst isLastChild = dl?.getChild(dl.childCount - 1) === parent;\n\t\t\t\tconst isAtEnd = position?.isAtEnd;\n\n\t\t\t\tif (dl && isLastChild && isAtEnd) {\n\t\t\t\t\tdata.preventDefault();\n\t\t\t\t\tevt.stop();\n\t\t\t\t\tmodel.change(writer => {\n\t\t\t\t\t\tconst paragraph = writer.createElement('paragraph');\n\t\t\t\t\t\twriter.insert(paragraph, model.createPositionAfter(dl));\n\t\t\t\t\t\twriter.setSelection(paragraph, 'in');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ⬆ Handle ↑ at start of first <dt>\n\t\t\tif (data.domEvent.key === 'ArrowUp' && parent?.is('element', 'definitionTerm')) {\n\t\t\t\tconst dl = parent.findAncestor('definitionList');\n\t\t\t\tconst isFirstChild = dl?.getChild(0) === parent;\n\t\t\t\tconst isAtStart = position?.isAtStart;\n\n\t\t\t\tif (dl && isFirstChild && isAtStart) {\n\t\t\t\t\tdata.preventDefault();\n\t\t\t\t\tevt.stop();\n\t\t\t\t\tmodel.change(writer => {\n\t\t\t\t\t\tconst paragraph = writer.createElement('paragraph');\n\t\t\t\t\t\twriter.insert(paragraph, model.createPositionBefore(dl));\n\t\t\t\t\t\twriter.setSelection(paragraph, 'in');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate defineSchema(): void {\n\t\tconst schema = this.editor.model.schema;\n\n\t\tschema.register('definitionList', {\n\t\t\tallowWhere: '$block',\n\t\t\tallowContentOf: '$block',\n\t\t\tisBlock: true\n\t\t});\n\n\t\tschema.register('definitionTerm', {\n\t\t\tallowIn: 'definitionList',\n\t\t\tallowContentOf: '$block',\n\t\t\tisBlock: true\n\t\t});\n\n\t\tschema.register('definitionDescription', {\n\t\t\tallowIn: 'definitionList',\n\t\t\tallowContentOf: '$block',\n\t\t\tisBlock: true\n\t\t});\n\t}\n\n\tprivate defineConverters(): void {\n\t\tconst conversion = this.editor.conversion;\n\n\t\tconversion.for('upcast').elementToElement({\n\t\t\tview: 'dl',\n\t\t\tmodel: 'definitionList'\n\t\t});\n\n\t\tconversion.for('upcast').elementToElement({\n\t\t\tview: 'dt',\n\t\t\tmodel: 'definitionTerm'\n\t\t});\n\n\t\tconversion.for('upcast').elementToElement({\n\t\t\tview: 'dd',\n\t\t\tmodel: 'definitionDescription'\n\t\t});\n\n\t\tconversion.for('dataDowncast').elementToElement({\n\t\t\tmodel: 'definitionList',\n\t\t\tview: 'dl'\n\t\t});\n\n\t\tconversion.for('dataDowncast').elementToElement({\n\t\t\tmodel: 'definitionTerm',\n\t\t\tview: 'dt'\n\t\t});\n\n\t\tconversion.for('dataDowncast').elementToElement({\n\t\t\tmodel: 'definitionDescription',\n\t\t\tview: 'dd'\n\t\t});\n\n\t\tconversion.for('editingDowncast').elementToElement({\n\t\t\tmodel: 'definitionList',\n\t\t\tview: (modelElement, { writer }) => writer.createContainerElement('dl')\n\t\t});\n\n\t\tconversion.for('editingDowncast').elementToElement({\n\t\t\tmodel: 'definitionTerm',\n\t\t\tview: (modelElement, { writer }) => writer.createEditableElement('dt')\n\t\t});\n\n\t\tconversion.for('editingDowncast').elementToElement({\n\t\t\tmodel: 'definitionDescription',\n\t\t\tview: (modelElement, { writer }) => writer.createEditableElement('dd')\n\t\t});\n\t}\n}\n\nclass InsertDefinitionListCommand extends Command {\n\tdeclare public value: boolean;\n\n\tpublic constructor(editor: Editor) {\n\t\tsuper(editor);\n\t\tthis.value = false;\n\t}\n\n\tpublic override execute(): void {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst selection = model.document.selection;\n\n\t\tconst isInsideDefinitionList = !!selection.getFirstPosition()?.findAncestor('definitionList');\n\t\tif (isInsideDefinitionList) {\n\t\t\treturn; // Prevent insertion if already inside a <dl>\n\t\t}\n\n\t\tmodel.change(writer => {\n\t\t\tconst dl = writer.createElement('definitionList');\n\t\t\tconst dt = writer.createElement('definitionTerm');\n\t\t\tconst dd = writer.createElement('definitionDescription');\n\n\t\t\twriter.insertText('Term', dt);\n\t\t\twriter.insertText('Definition', dd);\n\n\t\t\twriter.append(dt, dl);\n\t\t\twriter.append(dd, dl);\n\n\t\t\tmodel.insertContent(dl);\n\t\t\twriter.setSelection(dt, 'end');\n\t\t});\n\t}\n\n\tpublic override refresh(): void {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\n\t\tconst isInDefinitionList = !!selection.getFirstPosition()?.findAncestor('definitionList');\n\t\tthis.isEnabled = true;\n\t\tthis.value = isInDefinitionList;\n\t}\n}\n\nclass AlterDefinitionListCommand extends Command {\n\tprivate readonly _direction: 'forward' | 'backward';\n\tprivate readonly _source: 'definitionTerm' | 'definitionDescription';\n\tprivate readonly _target: 'definitionTerm' | 'definitionDescription';\n\n\tpublic constructor(editor: Editor, indentDirection: 'forward' | 'backward') {\n\t\tsuper(editor);\n\t\tthis._direction = indentDirection;\n\t\tthis._source = this._direction === 'forward' ? 'definitionTerm' : 'definitionDescription';\n\t\tthis._target = this._direction === 'backward' ? 'definitionTerm' : 'definitionDescription';\n\t}\n\n\tpublic override refresh(): void {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst position = selection.getFirstPosition();\n\t\tconst element = position?.parent;\n\t\tthis.isEnabled = element?.is('element', this._source) ?? false;\n\t}\n\n\tpublic override execute(): void {\n\t\tthis._transformElement(this._source, this._target, () => {});\n\t}\n\n\tprivate _transformElement(from: string, to: string, cancel: () => void): boolean {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst position = selection.getFirstPosition();\n\t\tconst element = position?.parent;\n\n\t\tif (element?.is('element', from)) {\n\t\t\tmodel.change(writer => {\n\t\t\t\tconst newElement = writer.createElement(to);\n\n\t\t\t\t// Insert the new element after the old one\n\t\t\t\twriter.insert(newElement, element, 'after');\n\n\t\t\t\t// Move all child nodes into the new element\n\t\t\t\tconst range = writer.createRangeIn(element);\n\t\t\t\twriter.move(range, writer.createPositionAt(newElement, 0));\n\n\t\t\t\t// Remove the old element\n\t\t\t\twriter.remove(element);\n\n\t\t\t\t// Set selection into the new element\n\t\t\t\twriter.setSelection(newElement, 'in');\n\t\t\t});\n\n\t\t\tcancel(); // prevent native behavior\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n","import ckeditor from './../theme/icons/ckeditor.svg';\nimport './augmentation.js';\n\nexport { default as DefinitionList } from './definitionlist.js';\n\nexport const icons = {\n\tckeditor\n};\n"],"names":["DefinitionList","Plugin","pluginName","init","editor","this","t","defineSchema","defineConverters","commands","add","InsertDefinitionListCommand","AlterDefinitionListCommand","ui","componentFactory","locale","view","ButtonView","set","label","icon","tooltip","command","get","bind","to","on","execute","editing","focus","afterInit","model","doc","document","indent","outdent","registerChildCommand","priority","keystrokes","keyEvtData","cancel","evt","data","position","selection","getFirstPosition","parent","domEvent","key","is","isAtEnd","next","nextSibling","stop","preventDefault","change","writer","range","createRangeIn","insertPos","createPositionAt","move","remove","setSelection","isAtStart","previous","previousSibling","dl","findAncestor","isLastChild","getChild","childCount","paragraph","createElement","insert","createPositionAfter","isFirstChild","createPositionBefore","schema","register","allowWhere","allowContentOf","isBlock","allowIn","conversion","for","elementToElement","modelElement","createContainerElement","createEditableElement","Command","constructor","super","value","dt","dd","insertText","append","insertContent","refresh","isInDefinitionList","isEnabled","_direction","_source","_target","indentDirection","element","_transformElement","from","newElement","icons","ckeditor"],"mappings":"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"}