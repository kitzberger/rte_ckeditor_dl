{"version":3,"file":"index.js","sources":["../src/definitionlist.ts","../src/index.ts"],"sourcesContent":["import { Plugin, ButtonView, Command, type MultiCommand, type Editor } from 'ckeditor5';\n\nimport definitionListIcon from './icon.svg';\n\nexport default class DefinitionList extends Plugin {\n\tpublic static get pluginName() {\n\t\treturn 'DefinitionList' as const;\n\t}\n\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\tthis.defineSchema();\n\t\tthis.defineConverters();\n\n\t\teditor.commands.add('insertDefinitionList', new InsertDefinitionListCommand(editor));\n\t\teditor.commands.add('indentDefinitionTerm', new AlterDefinitionListCommand(editor, 'forward'));\n\t\teditor.commands.add('outdentDefinitionDescription', new AlterDefinitionListCommand(editor, 'backward'));\n\n\t\t// Register the \"definitionList\" button, so it can be displayed in the toolbar.\n\t\teditor.ui.componentFactory.add('definitionList', locale => {\n\t\t\tconst view = new ButtonView(locale);\n\n\t\t\tview.set({\n\t\t\t\tlabel: t('Definition list'),\n\t\t\t\ticon: definitionListIcon,\n\t\t\t\ttooltip: true\n\t\t\t});\n\n\t\t\tconst command = editor.commands.get('insertDefinitionList') as InsertDefinitionListCommand;\n\t\t\tview.bind('isOn').to(command, 'value');\n\n\t\t\tview.on('execute', () => {\n\t\t\t\teditor.execute('insertDefinitionList');\n\t\t\t\teditor.editing.view.focus();\n\t\t\t});\n\n\t\t\treturn view;\n\t\t});\n\t}\n\n\tpublic afterInit(): void {\n\t\tconst editor = this.editor;\n\t\tconst commands = editor.commands;\n\t\tconst model = editor.model;\n\t\tconst doc = model.document;\n\t\tconst indent = commands.get('indent') as MultiCommand;\n\t\tconst outdent = commands.get('outdent') as MultiCommand;\n\n\t\tif (indent) {\n\t\t\t// Priority is high due to integration with `IndentBlock` plugin. We want to indent list first and if it's not possible\n\t\t\t// user can indent content with `IndentBlock` plugin.\n\t\t\tindent.registerChildCommand(commands.get('indentDefinitionTerm')!, { priority: 'high' });\n\t\t}\n\n\t\tthis.editor.keystrokes.set('Tab', (keyEvtData, cancel) => {\n\t\t\teditor.execute('indentDefinitionTerm');\n\t\t\tcancel();\n\t\t});\n\n\t\tif (outdent) {\n\t\t\t// Priority is lowest due to integration with `IndentBlock` and `IndentCode` plugins.\n\t\t\t// First we want to allow user to outdent all indendations from other features then he can oudent list item.\n\t\t\toutdent.registerChildCommand(commands.get('outdentDefinitionDescription')!, { priority: 'lowest' });\n\t\t}\n\n\t\tthis.editor.keystrokes.set('Shift+Tab', (keyEvtData, cancel) => {\n\t\t\teditor.execute('outdentDefinitionDescription');\n\t\t\tcancel();\n\t\t});\n\n\t\teditor.editing.view.document.on('keydown', (evt, data) => {\n\t\t\tconst selection = doc.selection;\n\t\t\tconst position = selection.getFirstPosition();\n\t\t\tconst parent = position?.parent;\n\n\t\t\t// Handle Delete at the end of a <dd>\n\t\t\tif (\n\t\t\t\tdata.domEvent.key === 'Delete' &&\n\t\t\t\tparent?.is('element', 'definitionDescription') &&\n\t\t\t\tposition?.isAtEnd\n\t\t\t) {\n\t\t\t\tconst next = parent.nextSibling;\n\n\t\t\t\tif (next?.is('element', 'definitionDescription')) {\n\t\t\t\t\tevt.stop();\n\t\t\t\t\tdata.preventDefault();\n\n\t\t\t\t\tmodel.change(writer => {\n\t\t\t\t\t\t// Move contents of next <dd> into current <dd>\n\t\t\t\t\t\tconst range = writer.createRangeIn(next);\n\t\t\t\t\t\tconst insertPos = writer.createPositionAt(parent, 'end');\n\t\t\t\t\t\twriter.move(range, insertPos);\n\n\t\t\t\t\t\t// Remove the now-empty <dd>\n\t\t\t\t\t\twriter.remove(next);\n\n\t\t\t\t\t\t// Reselect at end of merged content\n\t\t\t\t\t\twriter.setSelection(insertPos);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Handle Backspace at the beginning of a <dd>\n\t\t\tif (\n\t\t\t\tdata.domEvent.key === 'Backspace' &&\n\t\t\t\tparent?.is('element', 'definitionDescription') &&\n\t\t\t\tposition?.isAtStart\n\t\t\t) {\n\t\t\t\tconst previous = parent.previousSibling;\n\n\t\t\t\tif (previous?.is('element', 'definitionDescription')) {\n\t\t\t\t\tevt.stop();\n\t\t\t\t\tdata.preventDefault();\n\n\t\t\t\t\tmodel.change(writer => {\n\t\t\t\t\t\t// Move contents of current <dd> into the previous <dd>\n\t\t\t\t\t\tconst range = writer.createRangeIn(parent);\n\t\t\t\t\t\tconst insertPos = writer.createPositionAt(previous, 'end');\n\t\t\t\t\t\twriter.move(range, insertPos);\n\n\t\t\t\t\t\t// Remove the now-empty <dd>\n\t\t\t\t\t\twriter.remove(parent);\n\n\t\t\t\t\t\t// Set selection to end of merged content\n\t\t\t\t\t\twriter.setSelection(insertPos);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ⬇ Handle Enter or ↓ at end of last <dd>\n\t\t\tif ((data.domEvent.key === 'Enter' || data.domEvent.key === 'ArrowDown') && parent?.is('element', 'definitionDescription')) {\n\t\t\t\tconst dl = parent.findAncestor('definitionList');\n\t\t\t\tconst isLastChild = dl?.getChild(dl.childCount - 1) === parent;\n\t\t\t\tconst isAtEnd = position?.isAtEnd;\n\n\t\t\t\tif (dl && isLastChild && isAtEnd) {\n\t\t\t\t\tdata.preventDefault();\n\t\t\t\t\tevt.stop();\n\t\t\t\t\tmodel.change(writer => {\n\t\t\t\t\t\tconst paragraph = writer.createElement('paragraph');\n\t\t\t\t\t\twriter.insert(paragraph, model.createPositionAfter(dl));\n\t\t\t\t\t\twriter.setSelection(paragraph, 'in');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ⬆ Handle ↑ at start of first <dt>\n\t\t\tif (data.domEvent.key === 'ArrowUp' && parent?.is('element', 'definitionTerm')) {\n\t\t\t\tconst dl = parent.findAncestor('definitionList');\n\t\t\t\tconst isFirstChild = dl?.getChild(0) === parent;\n\t\t\t\tconst isAtStart = position?.isAtStart;\n\n\t\t\t\tif (dl && isFirstChild && isAtStart) {\n\t\t\t\t\tdata.preventDefault();\n\t\t\t\t\tevt.stop();\n\t\t\t\t\tmodel.change(writer => {\n\t\t\t\t\t\tconst paragraph = writer.createElement('paragraph');\n\t\t\t\t\t\twriter.insert(paragraph, model.createPositionBefore(dl));\n\t\t\t\t\t\twriter.setSelection(paragraph, 'in');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate defineSchema(): void {\n\t\tconst schema = this.editor.model.schema;\n\n\t\tschema.register('definitionList', {\n\t\t\tallowWhere: '$block',\n\t\t\tallowContentOf: '$block',\n\t\t\tisBlock: true\n\t\t});\n\n\t\tschema.register('definitionTerm', {\n\t\t\tallowIn: 'definitionList',\n\t\t\tallowContentOf: '$block',\n\t\t\tisBlock: true\n\t\t});\n\n\t\tschema.register('definitionDescription', {\n\t\t\tallowIn: 'definitionList',\n\t\t\tallowContentOf: '$block',\n\t\t\tisBlock: true\n\t\t});\n\t}\n\n\tprivate defineConverters(): void {\n\t\tconst conversion = this.editor.conversion;\n\n\t\tconversion.for('upcast').elementToElement({\n\t\t\tview: 'dl',\n\t\t\tmodel: 'definitionList'\n\t\t});\n\n\t\tconversion.for('upcast').elementToElement({\n\t\t\tview: 'dt',\n\t\t\tmodel: 'definitionTerm'\n\t\t});\n\n\t\tconversion.for('upcast').elementToElement({\n\t\t\tview: 'dd',\n\t\t\tmodel: 'definitionDescription'\n\t\t});\n\n\t\tconversion.for('dataDowncast').elementToElement({\n\t\t\tmodel: 'definitionList',\n\t\t\tview: 'dl'\n\t\t});\n\n\t\tconversion.for('dataDowncast').elementToElement({\n\t\t\tmodel: 'definitionTerm',\n\t\t\tview: 'dt'\n\t\t});\n\n\t\tconversion.for('dataDowncast').elementToElement({\n\t\t\tmodel: 'definitionDescription',\n\t\t\tview: 'dd'\n\t\t});\n\n\t\tconversion.for('editingDowncast').elementToElement({\n\t\t\tmodel: 'definitionList',\n\t\t\tview: (modelElement, { writer }) => writer.createContainerElement('dl')\n\t\t});\n\n\t\tconversion.for('editingDowncast').elementToElement({\n\t\t\tmodel: 'definitionTerm',\n\t\t\tview: (modelElement, { writer }) => writer.createEditableElement('dt')\n\t\t});\n\n\t\tconversion.for('editingDowncast').elementToElement({\n\t\t\tmodel: 'definitionDescription',\n\t\t\tview: (modelElement, { writer }) => writer.createEditableElement('dd')\n\t\t});\n\t}\n}\n\nclass InsertDefinitionListCommand extends Command {\n\tdeclare public value: boolean;\n\n\tpublic constructor(editor: Editor) {\n\t\tsuper(editor);\n\t\tthis.value = false;\n\t}\n\n\tpublic override execute(): void {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst selection = model.document.selection;\n\n\t\tconst isInsideDefinitionList = !!selection.getFirstPosition()?.findAncestor('definitionList');\n\t\tif (isInsideDefinitionList) {\n\t\t\treturn; // Prevent insertion if already inside a <dl>\n\t\t}\n\n\t\tmodel.change(writer => {\n\t\t\tconst dl = writer.createElement('definitionList');\n\t\t\tconst dt = writer.createElement('definitionTerm');\n\t\t\tconst dd = writer.createElement('definitionDescription');\n\n\t\t\twriter.insertText('Term', dt);\n\t\t\twriter.insertText('Definition', dd);\n\n\t\t\twriter.append(dt, dl);\n\t\t\twriter.append(dd, dl);\n\n\t\t\tmodel.insertContent(dl);\n\t\t\twriter.setSelection(dt, 'end');\n\t\t});\n\t}\n\n\tpublic override refresh(): void {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\n\t\tconst isInDefinitionList = !!selection.getFirstPosition()?.findAncestor('definitionList');\n\t\tthis.isEnabled = true;\n\t\tthis.value = isInDefinitionList;\n\t}\n}\n\nclass AlterDefinitionListCommand extends Command {\n\tprivate readonly _direction: 'forward' | 'backward';\n\tprivate readonly _source: 'definitionTerm' | 'definitionDescription';\n\tprivate readonly _target: 'definitionTerm' | 'definitionDescription';\n\n\tpublic constructor(editor: Editor, indentDirection: 'forward' | 'backward') {\n\t\tsuper(editor);\n\t\tthis._direction = indentDirection;\n\t\tthis._source = this._direction === 'forward' ? 'definitionTerm' : 'definitionDescription';\n\t\tthis._target = this._direction === 'backward' ? 'definitionTerm' : 'definitionDescription';\n\t}\n\n\tpublic override refresh(): void {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst position = selection.getFirstPosition();\n\t\tconst element = position?.parent;\n\t\tthis.isEnabled = element?.is('element', this._source) ?? false;\n\t}\n\n\tpublic override execute(): void {\n\t\tthis._transformElement(this._source, this._target, () => {});\n\t}\n\n\tprivate _transformElement(from: string, to: string, cancel: () => void): boolean {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst position = selection.getFirstPosition();\n\t\tconst element = position?.parent;\n\n\t\tif (element?.is('element', from)) {\n\t\t\tmodel.change(writer => {\n\t\t\t\tconst newElement = writer.createElement(to);\n\n\t\t\t\t// Insert the new element after the old one\n\t\t\t\twriter.insert(newElement, element, 'after');\n\n\t\t\t\t// Move all child nodes into the new element\n\t\t\t\tconst range = writer.createRangeIn(element);\n\t\t\t\twriter.move(range, writer.createPositionAt(newElement, 0));\n\n\t\t\t\t// Remove the old element\n\t\t\t\twriter.remove(element);\n\n\t\t\t\t// Set selection into the new element\n\t\t\t\twriter.setSelection(newElement, 'in');\n\t\t\t});\n\n\t\t\tcancel(); // prevent native behavior\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n","import ckeditor from './../theme/icons/ckeditor.svg';\nimport './augmentation.js';\n\nexport { default as DefinitionList } from './definitionlist.js';\n\nexport const icons = {\n\tckeditor\n};\n"],"names":["DefinitionList","Plugin","pluginName","init","editor","t","defineSchema","defineConverters","commands","add","InsertDefinitionListCommand","AlterDefinitionListCommand","ui","componentFactory","locale","view","ButtonView","set","label","icon","definitionListIcon","tooltip","command","get","bind","to","on","execute","editing","focus","afterInit","model","doc","document","indent","outdent","registerChildCommand","priority","keystrokes","keyEvtData","cancel","evt","data","selection","position","getFirstPosition","parent","domEvent","key","is","isAtEnd","next","nextSibling","stop","preventDefault","change","writer","range","createRangeIn","insertPos","createPositionAt","move","remove","setSelection","isAtStart","previous","previousSibling","dl","findAncestor","isLastChild","getChild","childCount","paragraph","createElement","insert","createPositionAfter","isFirstChild","createPositionBefore","schema","register","allowWhere","allowContentOf","isBlock","allowIn","conversion","for","elementToElement","modelElement","createContainerElement","createEditableElement","Command","value","isInsideDefinitionList","dt","dd","insertText","append","insertContent","refresh","isInDefinitionList","isEnabled","_direction","_source","_target","indentDirection","element","_transformElement","from","newElement","icons","ckeditor"],"mappings":"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"}